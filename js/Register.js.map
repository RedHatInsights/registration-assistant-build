{"version":3,"sources":["webpack:///./src/Routes/Register/Register.scss","webpack:///./src/Routes/Register/Helpers.scss","webpack:///./src/Routes/Register/Register.scss?4e0f","webpack:///./src/Routes/Register/Helpers.scss?3eaf","webpack:///./src/Messages.js","webpack:///./src/Routes/Register/Helpers.js","webpack:///./src/Routes/Register/Register.js"],"names":["exports","___CSS_LOADER_API_IMPORT___","push","module","i","content","options","transform","undefined","update","locals","hot","accept","newContent","a","b","key","idx","Error","dispose","defineMessages","registerYourSystems","preinstallationChecks","systemsManaged","viewInsightsDashboard","installTheClient","rhel8","rhel76","downloadPuppet","downloadModule","installAndConfigure","automatedInstallation","manualInstall","puppetAutomatedInstall","puppetAutomatedInstallMoInfo","deployingRHInsights","youCanAutomate","managingAnsibleRoles","hostGroup","rhSupported","operatingSystem","operatingSystemNote","stepOneTitle","deployRHI","stepNumberTitle","rhsChooseConfigMan","rhsChooseConfig","rhsChooseConfigStepOne","rhsChooseConfigStepTwo","rhsChooseConfigStepThree","rhsChooseConfigStepFour","sectionTwo","chapterEight","toApply","toView","ifYouHaveProblems","youCanChange","changingTheInsights","rhsm","registerRhsm","registerRhsmText","registerRhsmTextNote","registerRhsmTextNoteAfter","basicAuth","howToAccess","rhs","publicCloud","enablingInsightsOnRhuiTitle","enablingInsightsOnRhuiParagraph1","enablingInsightsOnRhuiParagraph2","createRedHatAccountInstructions","cloudAccessDocumentation","deployInsightsOnCloudTitle","deployInsightsOnCloudText","installInsightsClient","registerInsightsClient","configureBasicAuthTitle","configureBasicAuthStep1","configureBasicAuthStep2","configureBasicAuthStep3","configureBasicAuthStep4","insightsWithBasicAuthNote","visitOurDocumentation","dataCollection","learnMore","setupConfigure","assessAndMonitor","detectAndNotify","rhSM","combineTheFlexible","subscribeSatellite","subscribeSatelliteBody","verifySatellite","verifySatelliteStepOne","verifySatelliteStepTwo","verifySatelliteNote","useAutomation","automationNote","ansible","puppet","no","additionalInfo","intl","url","Button","className","isInline","component","variant","href","formatMessage","messages","insightsDashboard","registerInsightsCodeSnippet","installInsightsCodeSnippet","rhelNoAutomationSnippet","Fragment","stepTitle","title","stepNum","Title","headingLevel","number","variable","schema","fields","componentTypes","RADIO","name","initializeOnMount","initialValue","label","value","clearOnUnmount","condition","when","pattern","TextContent","Text","TextVariants","small","is","icon","p","class","helperText","role","link","TextList","TextListVariants","ol","TextListItem","newLine","linkOne","linkTwo","ExpandableSection","toggleText","h3","target","DataCollection","size","SetupConfigure","SmartManagement","RegisterWithRhsm","TitleSizes","xl","SubscribetoSatellite","EnablingInsightsOnRhui","Register","useIntl","FormTemplate","formFields","Split","hasGutter","SplitItem","Stack","StackItem","values","Divider","componentMapper","props","showFormControls","propTypes","PropTypes","object","withRouter"],"mappings":"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","file":"js/Register.js","sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".ins-c-main-split{height:100%}.ins-c-main-split .ins-c-left{width:50%;background-color:var(--pf-global--BackgroundColor--100)}.ins-c-main-split .ins-c-left .pf-l-stack{padding:var(--pf-global--gutter--md)}.ins-c-main-split .ins-c-right{width:50%}.ins-c-main-split .ins-c-right .pf-l-stack{padding:var(--pf-global--gutter--md) var(--pf-global--gutter--md) 0 0}.pf-c-divider{margin:var(--pf-global--spacer--xl) 0}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".learnMore{margin-left:var(--pf-global--spacer--sm)}pre{background-color:var(--pf-global--BackgroundColor--100);border-radius:var(--pf-global--BorderRadius--sm);padding:var(--pf-global--spacer--md)}.ins-c-gray{background-color:var(--pf-global--BackgroundColor--light-300)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./Register.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./Register.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./Register.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./Helpers.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./Helpers.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./Helpers.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","/* eslint-disable max-len */\nimport { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n    registerYourSystems: {\n        id: 'registerYourSystems',\n        description: 'Title',\n        defaultMessage: 'Register your systems with Red Hat Insights'\n    },\n    preinstallationChecks: {\n        id: 'preinstallationChecks',\n        description: 'Title',\n        defaultMessage: 'Preinstallation checks'\n    },\n    systemsManaged: {\n        id: 'systemsManaged',\n        description: 'Step one, first question',\n        defaultMessage: 'How are the systems managed?'\n    },\n    viewInsightsDashboard: {\n        id: 'viewInsightsDashboard',\n        description: 'View Insights dashboard',\n        defaultMessage: 'View Insights dashboard'\n    },\n    installTheClient: {\n        id: 'installTheClient',\n        description: 'Install the client and register your systems to Red Hat Insights',\n        defaultMessage: 'Install the client and register your systems to Red Hat Insights'\n    },\n    rhel8: {\n        id: 'rhel8',\n        description: 'RHEL 8',\n        defaultMessage: 'RHEL 8'\n    },\n    rhel76: {\n        id: 'rhel76',\n        description: 'RHEL 7 & 6',\n        defaultMessage: 'RHEL 7 & 6'\n    },\n    downloadPuppet: {\n        id: 'downloadPuppet',\n        description: 'Download the Insights-client puppet module',\n        defaultMessage: 'Download the Insights-client puppet module'\n    },\n    downloadModule: {\n        id: 'downloadModule',\n        description: 'Download module',\n        defaultMessage: 'Download module'\n    },\n    installAndConfigure: {\n        id: 'installAndConfigure',\n        description: 'Install and configure your puppet module',\n        defaultMessage: 'Install and configure your puppet module'\n    },\n    automatedInstallation: {\n        id: 'automatedInstallation',\n        description: 'Automated Installation',\n        defaultMessage: 'Automated Installation'\n    },\n    manualInstall: {\n        id: 'manualInstall',\n        description: 'Manual Installation',\n        defaultMessage: 'Manual Installation'\n    },\n    puppetAutomatedInstall: {\n        id: 'puppetAutomatedInstall',\n        description: 'Text for rhsm puppet automated installation',\n        defaultMessage: `If you are using Red Hat Satellite's configuration management provided by puppet this process can be automated by applying the preinstalled Puppet class {class}. This class can be imported from the Puppet Master into t he appropriate Puppet enviroment and papplied to hots that you wish to subrscribe to Red Hat Insights.`\n    },\n    puppetAutomatedInstallMoInfo: {\n        id: 'puppetAutomatedInstallMoInfo',\n        description: 'Text for rhsm puppet automated installation mo info',\n        defaultMessage: 'For more information on this topic, refer to the Creating a Host Group chapter in the official Satellite 6 User Guide.'\n    },\n    deployingRHInsights: {\n        id: 'deployingRHInsights',\n        description: 'Deploying Red Hat Insights using the Ansible Role included with your Smart Management entitlement',\n        defaultMessage: 'Deploying Red Hat Insights using the Ansible Role included with your Smart Management entitlement'\n    },\n    youCanAutomate: {\n        id: 'youCanAutomate',\n        description: 'You can automate the installation and registration of hosts with Red Hat Insights using the {role} Ansible role. For more information about adding this role to your Satellite, see {link}.',\n        defaultMessage: 'You can automate the installation and registration of hosts with Red Hat Insights using the {role} Ansible role. For more information about adding this role to your Satellite, see {link}.'\n    },\n    managingAnsibleRoles: {\n        id: 'managingAnsibleRoles',\n        description: 'Managing Ansible Roles',\n        defaultMessage: 'Managing Ansible Roles'\n    },\n    hostGroup: {\n        id: 'hostGroup',\n        description: 'Host Group chapter',\n        defaultMessage: 'Host Group chapter'\n    },\n    rhSupported: {\n        id: 'rhSupported',\n        description: 'Red Hat-supported versions',\n        defaultMessage: 'Red Hat-supported versions'\n    },\n    operatingSystem: {\n        id: 'operatingSystem',\n        description: 'OS',\n        defaultMessage: 'Operating System'\n    },\n    operatingSystemNote: {\n        id: 'operatingSystemNote',\n        description: 'OS note',\n        defaultMessage: 'Note: Red Hat Insights can be used on all {rhSupported} of Red Hat Enterprise Linux, version 6.4 and later.'\n    },\n    stepOneTitle: {\n        id: 'stepOneTitle',\n        description: 'Step one',\n        defaultMessage: 'Step 1: Tell us about your systems'\n    },\n    deployRHI: {\n        id: 'deployRHI',\n        description: 'Deploy Red Hat Insights using Puppet in Satellite',\n        defaultMessage: 'Deploy Red Hat Insights using Puppet in Satellite'\n    },\n    stepNumberTitle: {\n        id: 'stepNumberTitle',\n        description: 'Step number and title is variable',\n        defaultMessage: 'Step {number}: {variable}'\n    },\n    rhsChooseConfigMan: {\n        id: 'rhsChooseConfigMan',\n        description: 'Choose a configuration management tool',\n        defaultMessage: 'Choose a configuration management tool'\n    },\n    rhsChooseConfig: {\n        id: 'rhsChooseConfig',\n        description: 'Note: you can automate the installation and registration of systems with Ansible, included with your Red Hat Enterprise Linux entitlement.',\n        defaultMessage: 'Note: you can automate the installation and registration of systems with Ansible, included with your Red Hat Enterprise Linux entitlement.'\n    },\n    rhsChooseConfigStepOne: {\n        id: 'rhsChooseConfigStepOne',\n        description: 'Add the RedHatInsights.insights-client role to the hosts',\n        defaultMessage: `Add the RedHatInsights.insights-client role to the hosts. {newLine}\n        For new hosts, see {linkOne}. {newLine}\n        For existing hosts, see {linkTwo}.`\n    },\n    rhsChooseConfigStepTwo: {\n        id: 'rhsChooseConfigStepTwo',\n        description: 'Step two',\n        defaultMessage: 'To run the RedHatInsights.insights-client role on your host, navigate to Hosts > All Hosts and click the name of the host that you want to use.'\n    },\n    rhsChooseConfigStepThree: {\n        id: 'rhsChooseConfigStepThree',\n        description: 'Step 3',\n        defaultMessage: 'Click the Run Ansible roles button.'\n    },\n    rhsChooseConfigStepFour: {\n        id: 'rhsChooseConfigStepFour',\n        description: 'Red Hat Subscription Manager',\n        defaultMessage: 'See host on the Insights > Overview page of the Satellite web UI'\n    },\n    sectionTwo: {\n        id: 'sectionTwo',\n        description: 'Section 2.1',\n        defaultMessage: 'Section 2.1, \"Creating a Host in Red Hat Satellite\"'\n    },\n    chapterEight: {\n        id: 'chapterEight',\n        description: 'Chapter 8, Using Ansible Roles',\n        defaultMessage: 'Chapter 8, Using Ansible Roles'\n    },\n    toApply: {\n        id: 'toApply',\n        description: 'To apply any system updates to the Red Hat Insights plug-in, enter httpd restart after updating.',\n        defaultMessage: 'To apply any system updates to the Red Hat Insights plug-in, enter httpd restart after updating.'\n    },\n    toView: {\n        id: 'toView',\n        description: 'To view the logs for Red Hat Insights and all plug-ins, go to /var/log/foreman/production.log.',\n        defaultMessage: 'To view the logs for Red Hat Insights and all plug-ins, go to /var/log/foreman/production.log.'\n    },\n    ifYouHaveProblems: {\n        id: 'ifYouHaveProblems',\n        description: 'If you have problems connecting to Red Hat Insights, ensure that your certificates are up-to-date. Refresh your subscription manifest to update your certificates.',\n        defaultMessage: 'If you have problems connecting to Red Hat Insights, ensure that your certificates are up-to-date. Refresh your subscription manifest to update your certificates.'\n    },\n    youCanChange: {\n        id: 'youCanChange',\n        description: 'Red Hat Subscription Manager',\n        defaultMessage: 'You can change the default schedule for running insights-client by configuring insights-client.timer on a host. For more information, see {link} in the Client Configuration Guide for Red Hat Insights.'\n    },\n    changingTheInsights: {\n        id: 'changingTheInsights',\n        description: 'Changing the insights-client schedule',\n        defaultMessage: 'Changing the insights-client schedule'\n    },\n    rhsm: {\n        id: 'rhsm',\n        description: 'Red Hat Subscription Manager',\n        defaultMessage: 'Red Hat Subscription Manager'\n    },\n    registerRhsm: {\n        id: 'registerRhsm',\n        description: 'Red Hat Subscription Manager',\n        defaultMessage: 'Register with RHSM'\n    },\n    registerRhsmText: {\n        id: 'registerRhsmText',\n        description: 'Red Hat Subscription Manager text body',\n        defaultMessage: 'You must register all Red Hat Enterprise Linux (RHEL) systems with Red Hat Subscription Manager to recieve necessary updates and to resolve software dependencies.'\n    },\n    registerRhsmTextNote: {\n        id: 'registerRhsmTextNote',\n        description: 'Red Hat Subscription Manager text note',\n        defaultMessage: 'Note: If the system cannot be subscribed to RHSM, {basicAuth} can be configured on the client.'\n    },\n    registerRhsmTextNoteAfter: {\n        id: 'registerRhsmTextNoteAfter',\n        description: 'Red Hat Subscription Manager text note after',\n        defaultMessage: 'If you have a web-based proxy between your system and the Internet, you can configure the insights-client to connect through it. For more information, refer to {howToAccess}.'\n    },\n    basicAuth: {\n        id: 'basicAuth',\n        description: 'basic authentication',\n        defaultMessage: 'basic authentication'\n    },\n    howToAccess: {\n        id: 'howToAccess',\n        description: 'How to access Red Hat Insights through a firewall/Proxy',\n        defaultMessage: 'How to access Red Hat Insights through a firewall/Proxy'\n    },\n    rhs: {\n        id: 'rhs',\n        description: 'Red Hat Satellite',\n        defaultMessage: 'Red Hat Satellite'\n    },\n    publicCloud: {\n        id: 'publicCloud',\n        description: 'Public cloud',\n        defaultMessage: 'Public cloud/RHUI'\n    },\n    enablingInsightsOnRhuiTitle: {\n        id: 'enablingInsightsOnRhuiTitle',\n        description: 'Enabling Insights on RHUI/Cloud marketplace',\n        defaultMessage: 'Enabling Insights on RHUI/Cloud marketplace'\n    },\n    enablingInsightsOnRhuiParagraph1: {\n        id: 'enablingInsightsOnRhuiParagraph1',\n        description: 'Enabling Insights on RHUI/Cloud marketplace text first paragraph',\n        defaultMessage: 'You must have a Red Hat account.  If you\\'ve used RHEL on-demand through a public cloud marketplace but have never interacted with Red Hat directly, you can create an account by {createRedHatAccountInstructions}.'\n    },\n    enablingInsightsOnRhuiParagraph2: {\n        id: 'enablingInsightsOnRhuiParagraph2',\n        description: 'Enabling Insights on RHUI/Cloud marketplace text second paragraph',\n        defaultMessage: 'If you\\'re using a Red Hat subscription to entitle your RHEL system, you must enable the subscription for Red Hat Cloud Access.  Learn how to in the {cloudAccessDocumentation}.'\n    },\n    createRedHatAccountInstructions: {\n        id: 'createRedHatAccountInstructions',\n        description: 'Create Red Hat Account instructions',\n        defaultMessage: 'following these instructions'\n    },\n    cloudAccessDocumentation: {\n        id: 'cloudAccessDocumentation',\n        description: 'Cloud Access documentation',\n        defaultMessage: 'Cloud Access documentation'\n    },\n    deployInsightsOnCloudTitle: {\n        id: 'deployInsightsOnCloudInfra',\n        description: 'Deploy Red Hat Insights on your cloud infrastructure title',\n        defaultMessage: 'Deploy Red Hat Insights on your cloud infrastructure'\n    },\n    deployInsightsOnCloudText: {\n        id: 'deployInsightsOnCloudText',\n        description: 'Deploy Red Hat Insights on your cloud infrastructure text',\n        defaultMessage: 'The following guidance is user who wish to deploy Red Hat Insights on an existing, cloud marketplace-purchased Red Hat Enterprise Linux (RHEL) system managed by Red Hat Update Infrastructure (RHUI).  This include on-demand, hourly systems purchased from CCSP marketplace, as well as systems deployed from Red Hat Gold Images in AWS.  This procedure involves the following tasks:'\n    },\n    installInsightsClient: {\n        id: 'installInsightsClient',\n        description: 'Install the Insights client on each system',\n        defaultMessage: 'Install the Insights client on each system'\n    },\n    registerInsightsClient: {\n        id: 'registerInsightsClient',\n        description: 'Register the system to Insights',\n        defaultMessage: 'Register the system to Insights'\n    },\n    configureBasicAuthTitle: {\n        id: 'configureBasicAuthTitle',\n        description: 'Configure basic authentication in insights-client.conf',\n        defaultMessage: 'Configure basic authentication in /etc/insights-client/insights-client.conf'\n    },\n    configureBasicAuthStep1: {\n        id: 'configureBasicAuthStep1',\n        description: 'Modify the auto_config= value to FALSE',\n        defaultMessage: 'Modify the auto_config= value to FALSE'\n    },\n    configureBasicAuthStep2: {\n        id: 'configureBasicAuthStep2',\n        description: 'Add your Red Hat SSO username to username',\n        defaultMessage: 'Add your Red Hat SSO username to username'\n    },\n    configureBasicAuthStep3: {\n        id: 'configureBasicAuthStep3',\n        description: 'Add your Red Hat SSO password to password',\n        defaultMessage: 'Add your Red Hat SSO password to password'\n    },\n    configureBasicAuthStep4: {\n        id: 'configureBasicAuthStep4',\n        description: 'Save the configuration',\n        defaultMessage: 'Save the configuration'\n    },\n    insightsWithBasicAuthNote: {\n        id: 'insightsWithBasicAuthNote',\n        description: 'Note about Insights with basic authentication',\n        defaultMessage: 'Note: To read more about using Red Hat Insights with basic authentication and recommended best practices, {visitOurDocumentation}.'\n    },\n    visitOurDocumentation: {\n        id: 'visitOurDocumentation',\n        description: 'visit our documentation',\n        defaultMessage: 'visit our documentation'\n    },\n    dataCollection: {\n        id: 'dataCollection',\n        description: 'Data collection & controls',\n        defaultMessage: 'Data collection & controls'\n    },\n    learnMore: {\n        id: 'learnMore',\n        description: 'Learn more',\n        defaultMessage: 'Learn more'\n    },\n    setupConfigure: {\n        id: 'setupConfigure',\n        description: 'Setup and Configure',\n        defaultMessage: 'Setup and Configure'\n    },\n    assessAndMonitor: {\n        id: 'assessAndMonitor',\n        description: 'Assess and monitor the compliance of your RHEL systems using Policies',\n        defaultMessage: 'Assess and monitor the compliance of your RHEL systems using Policies'\n    },\n    detectAndNotify: {\n        id: 'detectAndNotify',\n        description: 'Detect and be notified of system configuration changes using Custom Policies',\n        defaultMessage: 'Detect and be notified of system configuration changes using Custom Policies'\n    },\n    rhSM: {\n        id: 'rhSM',\n        description: 'Red Hat® Smart Management',\n        defaultMessage: 'Red Hat® Smart Management'\n    },\n    combineTheFlexible: {\n        id: 'combineTheFlexible',\n        description: 'Combines the flexible and powerful infrastructure management capabilities of Red Hat Satellite with the ability to execute remediation plans from Red Hat Insights',\n        defaultMessage: 'Combines the flexible and powerful infrastructure management capabilities of Red Hat Satellite with the ability to execute remediation plans from Red Hat Insights'\n    },\n    subscribeSatellite: {\n        id: 'subscribeSatellite',\n        description: 'Subscribe hosts to the Satellite server',\n        defaultMessage: 'Subscribe hosts to the Satellite server'\n    },\n    subscribeSatelliteBody: {\n        id: 'subscribeSatelliteBody',\n        description: 'Subscribe hosts to the Satellite server -body',\n        defaultMessage: 'This step is typically already performed as par of Satellite host configuration.  Only RHEL hosts registered to the particular Satellite server will have reports available in the Satellite UI.'\n    },\n    verifySatellite: {\n        id: 'verifySatellite',\n        description: 'Verify Satellite server connection to Red Hat Insights',\n        defaultMessage: 'Verify Satellite server connection to Red Hat Insights'\n    },\n    verifySatelliteStepOne: {\n        id: 'verifySatelliteStepOne',\n        description: 'In the Satellite UI, navigate to Insighst > Manage.',\n        defaultMessage: 'In the Satellite UI, navigate to Insighst > Manage.'\n    },\n    verifySatelliteStepTwo: {\n        id: 'verifySatelliteStepTwo',\n        description: 'Verify under Insights Engine Connection that the status is Connected and the Account Number field displays the correct information for your organization.',\n        defaultMessage: 'Verify under Insights Engine Connection that the status is Connected and the Account Number field displays the correct information for your organization.'\n    },\n    verifySatelliteNote: {\n        id: 'verifySatelliteNote',\n        description: 'Satellite organization with Red Hat Insights must be operating in Connected mode. Any firewalls or proxies through which the Satellite server communicates to Red Hat must allow https communications to {link}.',\n        defaultMessage: 'Satellite organization with Red Hat Insights must be operating in Connected mode. Any firewalls or proxies through which the Satellite server communicates to Red Hat must allow https communications to {link}.'\n    },\n    useAutomation: {\n        id: 'useAutomation',\n        description: 'Use automation',\n        defaultMessage: 'Do you wish to use automation for installation?'\n    },\n    automationNote: {\n        id: 'automationNote',\n        description: 'Automation note',\n        defaultMessage: 'Note: You can automate the installation and registration of systems with Ansible, included with your Red Hat Enterprise Linux entitlement.'\n    },\n    ansible: {\n        id: 'ansible',\n        description: 'Ansible',\n        defaultMessage: 'Ansible'\n    },\n    puppet: {\n        id: 'puppet',\n        description: 'Puppet',\n        defaultMessage: 'Puppet'\n    },\n    no: {\n        id: 'no',\n        description: 'No',\n        defaultMessage: 'No'\n    },\n    additionalInfo: {\n        id: 'additionalInfo',\n        description: 'Additional Information',\n        defaultMessage: 'Additional Information'\n    }\n});\n","/* eslint-disable react/prop-types */\n/* eslint-disable max-len */\nimport './Helpers.scss';\n\nimport { CloudIcon, CogsIcon, DownloadIcon, ShieldAltIcon } from '@patternfly/react-icons';\nimport { Text, TextContent, TextList, TextListItem, TextListVariants, TextVariants } from '@patternfly/react-core/dist/esm/components/Text/index';\nimport { Title, TitleSizes } from '@patternfly/react-core/dist/esm/components/Title/Title';\n\nimport { Button } from '@patternfly/react-core/dist/esm/components/Button/Button';\nimport { ExpandableSection } from '@patternfly/react-core/dist/esm/components/ExpandableSection/ExpandableSection';\nimport React from 'react';\nimport { componentTypes } from '@data-driven-forms/react-form-renderer';\nimport messages from '../../Messages';\n\nconst learnMore = (intl, url = '#') => <Button className='learnMore' isInline component='a' variant='link' href={url} >{intl.formatMessage(messages.learnMore)}</Button>;\nconst insightsDashboard = intl => <Button component='a' variant='primary' href='https://cloud.redhat.com/insights/' >{intl.formatMessage(messages.viewInsightsDashboard)}</Button>;\n\nconst registerInsightsCodeSnippet =\n    <pre className='ins-c-gray'>\n        <code>\n            [root@server ~]# insights-client --register\n        </code>\n    </pre>;\n\nconst installInsightsCodeSnippet =\n    <pre className='ins-c-gray'>\n        <code>\n            [root@server ~]# yum install insights-client\n        </code>\n    </pre>;\n\nconst rhelNoAutomationSnippet = intl => <React.Fragment>\n    {registerInsightsCodeSnippet}\n    {insightsDashboard(intl)}\n</React.Fragment>;\n\nconst manualInstall = intl => <React.Fragment>\n    {installInsightsCodeSnippet}\n    {rhelNoAutomationSnippet(intl)}\n</React.Fragment>;\n\nconst stepTitle = (intl, title, stepNum) => <Title headingLevel='h3'>{intl.formatMessage(messages.stepNumberTitle, { number: stepNum, variable: title })}</Title>;\n\nconst schema = intl => ({\n    fields: [{\n        component: componentTypes.RADIO,\n        name: 'how-are-systems-managed',\n        initializeOnMount: true,\n        initialValue: 'rhsm',\n        label: intl.formatMessage(messages.systemsManaged),\n        options: [\n            { label: intl.formatMessage(messages.rhsm), value: 'rhsm' },\n            { label: intl.formatMessage(messages.rhs), value: 'rhs' },\n            { label: intl.formatMessage(messages.publicCloud), value: 'rhui' }]\n    }, {\n        component: componentTypes.RADIO,\n        name: 'rhel-os',\n        initializeOnMount: true,\n        initialValue: 'rhel8',\n        clearOnUnmount: true,\n        label: intl.formatMessage(messages.operatingSystem),\n        condition: { when: 'how-are-systems-managed', pattern: /rhsm|rhui/ },\n        options: [\n            { label: intl.formatMessage(messages.rhel8), value: 'rhel8' },\n            { label: intl.formatMessage(messages.rhel76), value: 'rhel76' }\n        ]\n    }, {\n        component: 'plain-text',\n        name: 'rhel-os-helper',\n        label: <TextContent> <Text component={TextVariants.small}>{intl.formatMessage(messages.operatingSystemNote, {\n            rhSupported: <Button isInline component='a' variant='link' href='https://access.redhat.com/support/policy/updates/errata' >{intl.formatMessage(messages.rhSupported)}</Button>\n        })}</Text></TextContent>,\n        condition: { when: 'rhel-os', is: 'rhel76' }\n    }, {\n        component: componentTypes.RADIO,\n        name: 'automation',\n        initializeOnMount: true,\n        initialValue: 'no',\n        clearOnUnmount: true,\n        label: intl.formatMessage(messages.useAutomation),\n        condition: { when: 'how-are-systems-managed', is: 'rhsm' },\n        options: [\n            { label: intl.formatMessage(messages.ansible), value: 'ansible' },\n            { label: intl.formatMessage(messages.puppet), value: 'puppet' },\n            { label: intl.formatMessage(messages.no), value: 'no' }\n        ]\n    }, {\n        component: 'plain-text',\n        name: 'rhsm-rhel76-no',\n        label: <React.Fragment>\n            {stepTitle(intl, intl.formatMessage(messages.installTheClient), 2)}\n            {manualInstall(intl)}\n        </React.Fragment>,\n        condition: [{ when: 'automation', is: 'no' }, { when: 'how-are-systems-managed', is: 'rhsm' }, { when: 'rhel-os', is: 'rhel76' }]\n    }, {\n        component: 'plain-text',\n        name: 'rhsm-rhel8-no',\n        label: <React.Fragment>\n            {stepTitle(intl, intl.formatMessage(messages.registerYourSystems), 2)}\n            {rhelNoAutomationSnippet(intl)}\n        </React.Fragment>,\n        condition: [{ when: 'automation', is: 'no' }, { when: 'how-are-systems-managed', is: 'rhsm' }, { when: 'rhel-os', is: 'rhel8' }]\n    }, {\n        component: 'plain-text',\n        name: 'rhsm-puppet',\n        label: <React.Fragment>\n            {stepTitle(intl, intl.formatMessage(messages.downloadPuppet), 2)}\n            <Button variant=\"primary\" className='pf-m-display-lg' icon={<DownloadIcon />} component='a' href='https://forge.puppet.com/lphiri/access_insights_client'>\n                {intl.formatMessage(messages.downloadModule)}\n            </Button>\n            {stepTitle(intl, intl.formatMessage(messages.installAndConfigure), 3)}\n            <Title headingLevel='h2'>{intl.formatMessage(messages.automatedInstallation)}</Title>\n            <TextContent>\n                <Text component={TextVariants.p}>{intl.formatMessage(messages.puppetAutomatedInstall, {\n                    class: <strong>access_insights_clients</strong>\n                })}</Text>\n                <Text component={TextVariants.p}>{intl.formatMessage(messages.puppetAutomatedInstallMoInfo)}</Text>\n            </TextContent>\n\n            <Title headingLevel='h2'>{intl.formatMessage(messages.manualInstall)}</Title>\n            {manualInstall(intl)}\n        </React.Fragment>,\n        condition: [{ when: 'automation', is: 'puppet' }, { when: 'how-are-systems-managed', is: 'rhsm' }]\n    }, {\n        component: componentTypes.RADIO,\n        name: 'rhs-automation',\n        initializeOnMount: true,\n        initialValue: 'puppet',\n        clearOnUnmount: true,\n        label: intl.formatMessage(messages.rhsChooseConfigMan),\n        helperText: intl.formatMessage(messages.rhsChooseConfig),\n        condition: { when: 'how-are-systems-managed', is: 'rhs' },\n        options: [\n            { label: intl.formatMessage(messages.ansible), value: 'ansible' },\n            { label: intl.formatMessage(messages.puppet), value: 'puppet' }\n        ]\n    }, {\n        component: 'plain-text',\n        name: 'rhs-puppet',\n        label: <React.Fragment>\n            {stepTitle(intl, intl.formatMessage(messages.deployRHI), 2)}\n            <Button variant=\"primary\" className='pf-m-display-lg' icon={<DownloadIcon />} component='a' href='https://forge.puppet.com/lphiri/access_insights_client'>\n                {intl.formatMessage(messages.downloadModule)}\n            </Button>\n            <TextContent>\n                <Text component={TextVariants.p}>{intl.formatMessage(messages.puppetAutomatedInstall, {\n                    class: <strong>access_insights_clients</strong>\n                })}</Text>\n                <Text component={TextVariants.p}>{intl.formatMessage(messages.puppetAutomatedInstallMoInfo)}</Text>\n            </TextContent>\n            {insightsDashboard(intl)}\n        </React.Fragment>,\n        condition: [{ when: 'rhs-automation', is: 'puppet' }, { when: 'how-are-systems-managed', is: 'rhs' }]\n    }, {\n        component: 'plain-text',\n        name: 'rhs-ansible',\n        label: <React.Fragment>\n            {stepTitle(intl, intl.formatMessage(messages.deployingRHInsights), 2)}\n            <TextContent>\n                <Text component={TextVariants.p}>{intl.formatMessage(messages.youCanAutomate, {\n                    role: <strong>RedHatInsights.insights-client</strong>,\n                    link: <Button isInline component='a' variant='link' href='https://access.redhat.com/documentation/en-us/red_hat_satellite/6.6/html/administering_red_hat_satellite/chap-Red_Hat_Satellite-Administering_Red_Hat_Satellite-Managing_Ansible_Roles'>{intl.formatMessage(messages.managingAnsibleRoles)}</Button>\n                })}</Text>\n                <TextList component={TextListVariants.ol}>\n                    <TextListItem>\n                        <Text component={TextVariants.p}>{intl.formatMessage(messages.rhsChooseConfigStepOne, {\n                            role: <strong>RedHatInsights.insights-client</strong>,\n                            newLine: <br />,\n                            linkOne: <Button isInline component='a' variant='link' href='https://access.redhat.com/documentation/en-us/red_hat_satellite/6.6/html/managing_hosts/Administering_Hosts#creating-a-host-in-satellite'>{intl.formatMessage(messages.sectionTwo)}</Button>,\n                            linkTwo: <Button isInline component='a' variant='link' href='https://access.redhat.com/documentation/en-us/red_hat_satellite/6.6/html/managing_hosts/Using_Ansible_Roles'>{intl.formatMessage(messages.chapterEight)}</Button>\n                        })}</Text>\n                    </TextListItem>\n                    <TextListItem>{intl.formatMessage(messages.rhsChooseConfigStepTwo)}</TextListItem>\n                    <TextListItem>{intl.formatMessage(messages.rhsChooseConfigStepThree)}</TextListItem>\n                    <TextListItem>{intl.formatMessage(messages.rhsChooseConfigStepFour)}</TextListItem>\n                </TextList>\n            </TextContent>\n\n            <ExpandableSection toggleText={intl.formatMessage(messages.additionalInfo)}>\n                <TextList>\n                    <TextListItem>{intl.formatMessage(messages.toApply)}</TextListItem>\n                    <TextListItem>{intl.formatMessage(messages.toView)}</TextListItem>\n                    <TextListItem>{intl.formatMessage(messages.ifYouHaveProblems)}</TextListItem>\n                    <TextListItem>{intl.formatMessage(messages.youCanChange, {\n                        link: <Button isInline component='a' variant='link' href='https://access.redhat.com/documentation/en-us/red_hat_insights/1.0/html/client_configuration_guide_for_red_hat_insights/changing-the-client-schedule'>{intl.formatMessage(messages.changingTheInsights)}</Button>\n                    })}</TextListItem>\n                </TextList>\n            </ExpandableSection>\n            {insightsDashboard(intl)}\n        </React.Fragment>,\n        condition: [{ when: 'rhs-automation', is: 'ansible' }, { when: 'how-are-systems-managed', is: 'rhs' }]\n    }, {\n        component: 'plain-text',\n        name: 'rhui-first-part',\n        label: <React.Fragment>\n            {stepTitle(intl, intl.formatMessage(messages.deployInsightsOnCloudTitle), 2)}\n            <TextContent>\n                <Text component={TextVariants.p}>{intl.formatMessage(messages.deployInsightsOnCloudText)}</Text>\n            </TextContent>\n        </React.Fragment>,\n        condition: [{ when: 'how-are-systems-managed', is: 'rhui' }]\n    }, {\n        component: 'plain-text',\n        name: 'rhui-rhel76-optional-part',\n        label: <React.Fragment>\n            <TextContent>\n                <Text component={TextVariants.h3}>{intl.formatMessage(messages.installInsightsClient)}</Text>\n                {installInsightsCodeSnippet}\n            </TextContent>\n        </React.Fragment>,\n        condition: [{ when: 'how-are-systems-managed', is: 'rhui' }, { when: 'rhel-os', is: 'rhel76' }]\n    }, {\n        component: 'plain-text',\n        name: 'rhui-last-part',\n        label: <React.Fragment>\n            <TextContent>\n                <Text component={TextVariants.h3}>{intl.formatMessage(messages.configureBasicAuthTitle)}</Text>\n                <TextList component={TextListVariants.ol}>\n                    <TextListItem>{intl.formatMessage(messages.configureBasicAuthStep1)}</TextListItem>\n                    <TextListItem>{intl.formatMessage(messages.configureBasicAuthStep2)}</TextListItem>\n                    <TextListItem>{intl.formatMessage(messages.configureBasicAuthStep3)}</TextListItem>\n                    <TextListItem>{intl.formatMessage(messages.configureBasicAuthStep4)}</TextListItem>\n                </TextList>\n                <Text component={TextVariants.small}>{intl.formatMessage(messages.insightsWithBasicAuthNote,\n                    { visitOurDocumentation: <Button isInline component='a' variant='link' target=\"_blank\" href='https://access.redhat.com/articles/4038251' >{intl.formatMessage(messages.visitOurDocumentation)}</Button> })}\n                </Text>\n                <Text component={TextVariants.h3}>{intl.formatMessage(messages.registerInsightsClient)}</Text>\n                {rhelNoAutomationSnippet(intl)}\n            </TextContent>\n        </React.Fragment>,\n        condition: [{ when: 'how-are-systems-managed', is: 'rhui' }]\n    }\n    ]\n});\n\nconst DataCollection = ({ intl }) => <React.Fragment>\n    <Title headingLevel='h4'><ShieldAltIcon size='md' className='ins-c-icon' />{intl.formatMessage(messages.dataCollection)}\n        {learnMore(intl, 'https://marvelapp.com/prototype/77d4f5b/screen/71352111')}\n    </Title>\n</React.Fragment>;\n\nconst SetupConfigure = ({ intl }) => <React.Fragment>\n    <Title headingLevel='h4'><CogsIcon size='md' className='ins-c-icon' />{intl.formatMessage(messages.setupConfigure)}</Title>\n    <TextContent >\n        <Text component={TextVariants.p}>\n            {intl.formatMessage(messages.assessAndMonitor)}\n            {learnMore(intl, 'https://access.redhat.com/documentation/en-us/red_hat_insights/2020-04/html/monitoring_and_reacting_to_configuration_changes_using_policies/')}\n        </Text>\n        <Text component={TextVariants.p}>\n            {intl.formatMessage(messages.detectAndNotify)}\n            {learnMore(intl, 'https://www.redhat.com/en/technologies/management/smart-management')}\n        </Text>\n    </TextContent>\n</React.Fragment>;\n\nconst SmartManagement = ({ intl }) => <React.Fragment>\n    <Title headingLevel='h4'><CloudIcon size='md' className='ins-c-icon' />{intl.formatMessage(messages.rhSM)}</Title>\n    <TextContent>\n        <Text component={TextVariants.p}>\n            {intl.formatMessage(messages.combineTheFlexible)}\n            {learnMore(intl, 'https://www.redhat.com/en/technologies/management/smart-management')}\n        </Text>\n    </TextContent>\n</React.Fragment>;\n\nconst RegisterWithRhsm = ({ intl }) => <React.Fragment>\n    <Title headingLevel='h4' size={TitleSizes.xl}>{intl.formatMessage(messages.registerRhsm)}</Title>\n    <TextContent>\n        <Text component={TextVariants.p}>\n            {intl.formatMessage(messages.registerRhsmText)}\n        </Text>\n        <pre>\n            <code>\n                [root@server ~]# subscription-manager register --auto-attach\n            </code>\n        </pre>\n        <Text component={TextVariants.small}>{intl.formatMessage(messages.registerRhsmTextNote,\n            { basicAuth: <Button isInline component='a' variant='link' href='https://access.redhat.com/documentation/en-us/red_hat_insights/2020-04/html/assessing_and_monitoring_security_policy_compliance_of_rhel_systems/' >{intl.formatMessage(messages.basicAuth)}</Button> })}\n        </Text>\n        <Text component={TextVariants.small}>{intl.formatMessage(messages.registerRhsmTextNoteAfter,\n            { howToAccess: <Button isInline component='a' variant='link' href='https://access.redhat.com/solutions/1583183' >{intl.formatMessage(messages.howToAccess)}</Button> })}</Text>\n    </TextContent>\n</React.Fragment>;\n\nconst SubscribetoSatellite = ({ intl }) => <React.Fragment>\n    <Title headingLevel='h3'>{intl.formatMessage(messages.subscribeSatellite)}</Title>\n    <TextContent>\n        <Text component={TextVariants.p}>\n            {intl.formatMessage(messages.subscribeSatelliteBody)}\n        </Text>\n        <Title headingLevel='h4'>{intl.formatMessage(messages.verifySatellite)}</Title>\n        <TextList>\n            <TextListItem>{intl.formatMessage(messages.verifySatelliteStepOne)}</TextListItem>\n            <TextListItem>{intl.formatMessage(messages.verifySatelliteStepTwo)}</TextListItem>\n        </TextList>\n        <Text component={TextVariants.small}>{intl.formatMessage(messages.verifySatelliteNote,\n            { link: <Button isInline component='a' variant='link' href='https://cert-api.accesss.redhat.com' >https://cert-api.accesss.redhat.com</Button> })}</Text>\n    </TextContent>\n</React.Fragment>;\n\nconst EnablingInsightsOnRhui = ({ intl }) => <React.Fragment>\n    <Title headingLevel='h3'>{intl.formatMessage(messages.enablingInsightsOnRhuiTitle)}</Title>\n    <TextContent>\n        <Text component={TextVariants.p}>{intl.formatMessage(messages.enablingInsightsOnRhuiParagraph1,\n            { createRedHatAccountInstructions: <Button isInline component='a' variant='link' target=\"_blank\" href='https://access.redhat.com/products/red-hat-insights#new-red-hat-account' >{intl.formatMessage(messages.createRedHatAccountInstructions)}</Button> })}\n        </Text>\n        <Text component={TextVariants.p}>{intl.formatMessage(messages.enablingInsightsOnRhuiParagraph2,\n            { cloudAccessDocumentation: <Button isInline component='a' variant='link' target=\"_blank\" href='https://access.redhat.com/documentation/en-us/red_hat_subscription_management/1/html/red_hat_cloud_access_reference_guide/index' >{intl.formatMessage(messages.cloudAccessDocumentation)}</Button> })}\n        </Text>\n    </TextContent>\n</React.Fragment>;\n\nexport { learnMore, schema, DataCollection, SetupConfigure, SmartManagement, RegisterWithRhsm, SubscribetoSatellite, EnablingInsightsOnRhui };\n","import './Register.scss';\n\nimport { DataCollection, EnablingInsightsOnRhui, RegisterWithRhsm, SetupConfigure, SmartManagement, SubscribetoSatellite, schema } from './Helpers';\nimport { Split, SplitItem } from '@patternfly/react-core/dist/esm/layouts/Split/index';\nimport { Stack, StackItem } from '@patternfly/react-core/dist/esm/layouts/Stack/index';\n\nimport { Divider } from '@patternfly/react-core/dist/esm/components/Divider/Divider';\nimport FormRenderer from '@data-driven-forms/react-form-renderer';\nimport FormSpy from '@data-driven-forms/react-form-renderer/dist/esm/form-spy';\nimport { Form as PfForm } from '@patternfly/react-core/dist/esm/components/Form/Form';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { TasksIcon } from '@patternfly/react-icons';\nimport { Title } from '@patternfly/react-core/dist/esm/components/Title/Title';\nimport { componentMapper } from '@data-driven-forms/pf4-component-mapper';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\nimport { withRouter } from 'react-router-dom';\n\nconst Register = () => {\n    const intl = useIntl();\n\n    const FormTemplate = ({ formFields }) => <Split hasGutter className='ins-c-main-split'>\n        <SplitItem className='ins-c-left'>\n            <Stack hasGutter >\n                <StackItem>\n                    <Title headingLevel='h1'>{intl.formatMessage(messages.registerYourSystems)}</Title>\n                </StackItem>\n                <StackItem>\n                    <Title headingLevel='h3'>{intl.formatMessage(messages.stepOneTitle)}</Title>\n                    <PfForm>{formFields}</PfForm>\n                </StackItem>\n            </Stack>\n        </SplitItem>\n        <SplitItem className='ins-c-right'>\n            <Stack hasGutter>\n                <StackItem>\n                    <Title headingLevel='h3'>\n                        <TasksIcon size='md' className='ins-c-icon' />{intl.formatMessage(messages.preinstallationChecks)}\n                    </Title>\n                </StackItem>\n                <StackItem>\n                    <ul>\n                        <li>\n                            <FormSpy>\n                                {({ values }) => values['how-are-systems-managed'] === 'rhsm' ? (\n                                    <RegisterWithRhsm intl={intl} />\n                                ) : values['how-are-systems-managed'] === 'rhs' ?\n                                    <SubscribetoSatellite intl={intl} />\n                                    : <EnablingInsightsOnRhui intl={intl} />\n                                }\n                            </FormSpy>\n                        </li>\n                        <Divider component='li' />\n                        <li><DataCollection intl={intl} /></li>\n                        <Divider component='li' />\n                        <li> <SetupConfigure intl={intl} /></li>\n                        <Divider component='li' />\n                        <FormSpy>\n                            {({ values }) => values['how-are-systems-managed'] !== 'rhs' ? <React.Fragment>\n                                <li><SmartManagement intl={intl} /></li><Divider component='li' />\n                            </React.Fragment> : null\n                            }\n                        </FormSpy>\n                    </ul>\n                </StackItem>\n            </Stack>\n        </SplitItem>\n    </Split>;\n\n    return <FormRenderer\n        schema={schema(intl)}\n        componentMapper={componentMapper}\n        FormTemplate={props => <FormTemplate {...props} showFormControls={false} />} />;\n};\n\nRegister.propTypes = {\n    formFields: PropTypes.object\n};\n\nexport default withRouter(Register);\n"],"sourceRoot":""}