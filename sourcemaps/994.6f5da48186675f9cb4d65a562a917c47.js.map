{"version":3,"file":"js/994.1695806020237.83ad48bbad3ff2389701.js","mappings":"mNAqBA,SAAeA,E,SAAAA,aAdH,SAACC,GAAU,wCACrB,8EACEC,SAASC,OAAOC,OAChBF,SAASC,OAAOE,YAAY,gBAF9B,4CADqB,sBAWrB,OALAC,EAAAA,EAAAA,YAAU,WAAM,SANK,mCAOnBC,GACA,aAAAL,SAASC,QAAOK,wBAAhB,gBACD,GAAE,IAEI,kBAAC,IAAD,CAAQC,WAAYR,GAC5B,G,4ICCD,QAZiB,kBACf,kBAAC,KAAD,CACES,OAAQC,UAAUC,SAASC,MAAM,EAAG,GACpCC,SAAUA,EACVC,QAASC,QAAQC,KAEjB,kBAAC,gBAAD,CAAQC,UAAUC,EAAAA,EAAAA,IAAYC,OAAOC,SAASC,WAC5C,kBAAC,IAAD,OAPW,C,wGCsBjB,QAtBgB,WAYd,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAgBC,QAAQ,YAAYC,UAbxB,kBACd,0BACEC,UAAU,eACVC,KAAK,cACL,iBAAe,cAEf,0BAAMD,UAAU,0BAChB,0BAAMA,UAAU,4BAChB,0BAAMA,UAAU,4BARJ,IAcZ,kBAAC,IAAD,CAAOE,KAAK,KAAKC,aAAa,MAA9B,WAKL,C,8FCvBKC,GAAWC,EAAAA,EAAAA,OAAK,kBACpB,+DADoB,IAKTC,EAAS,kBACpB,kBAAC,EAAAC,OAAD,KACE,kBAAC,EAAAC,MAAD,CACEC,IAAI,WACJC,OAAK,EACLC,KAPoB,IAQpBC,UAAU,WACVb,UAAW,kBACT,kBAAC,EAAAc,SAAD,CAAUC,SAAU,kBAAC,IAAD,OACjB,IACD,kBAACV,EAAD,MAAa,IAHN,IAOb,kBAAC,EAAAW,SAAD,CAAUJ,KAAK,IAAIK,GAhBG,IAgBiBC,MAAI,IAdzB,C","sources":["webpack:///./src/App.js","webpack:///./src/AppEntry.js","webpack:///./src/Components/Loading/Loading.js","webpack:///./src/Routes.js"],"sourcesContent":["import './App.scss';\n\nimport React, { useEffect } from 'react';\n\nimport { Routes } from './Routes';\nimport { withRouter } from 'react-router-dom';\n\nconst App = (props) => {\n  async function initChrome() {\n    insights.chrome.init();\n    insights.chrome.identifyApp('registration');\n  }\n\n  useEffect(() => {\n    initChrome();\n    insights.chrome.hideGlobalFilter?.();\n  }, []);\n\n  return <Routes childProps={props} />;\n};\n\nexport default withRouter(App);\n","/* eslint-disable no-console */\nimport App from './App';\nimport { IntlProvider } from '@redhat-cloud-services/frontend-components-translations/index';\nimport React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { getBaseName } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport messages from '../locales/data.json';\n\nconst AppEntry = () => (\n  <IntlProvider\n    locale={navigator.language.slice(0, 2)}\n    messages={messages}\n    onError={console.log}\n  >\n    <Router basename={getBaseName(window.location.pathname)}>\n      <App />\n    </Router>\n  </IntlProvider>\n);\n\nexport default AppEntry;\n","import {\n  EmptyState,\n  EmptyStateIcon,\n  Title,\n} from '@patternfly/react-core/dist/esm/components';\n\nimport React from 'react';\n\nconst Loading = () => {\n  const Spinner = () => (\n    <span\n      className=\"pf-c-spinner\"\n      role=\"progressbar\"\n      aria-valuetext=\"Loading...\"\n    >\n      <span className=\"pf-c-spinner__clipper\" />\n      <span className=\"pf-c-spinner__lead-ball\" />\n      <span className=\"pf-c-spinner__tail-ball\" />\n    </span>\n  );\n  return (\n    <EmptyState>\n      <EmptyStateIcon variant=\"container\" component={Spinner} />\n      <Title size=\"lg\" headingLevel=\"h4\">\n        Loading\n      </Title>\n    </EmptyState>\n  );\n};\n\nexport default Loading;\n","import React, { Suspense, lazy } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nimport Loading from './Components/Loading/Loading';\n\nconst Register = lazy(() =>\n  import(/* webpackChunkName: \"Register\" */ './Routes/Register/Register')\n);\nconst paths = { register: '/' };\n\nexport const Routes = () => (\n  <Switch>\n    <Route\n      key=\"register\"\n      exact\n      path={paths.register}\n      rootClass=\"Insights\"\n      component={() => (\n        <Suspense fallback={<Loading />}>\n          {' '}\n          <Register />{' '}\n        </Suspense>\n      )}\n    />\n    <Redirect path=\"*\" to={paths.register} push />\n  </Switch>\n);\n"],"names":["withRouter","props","insights","chrome","init","identifyApp","useEffect","initChrome","hideGlobalFilter","childProps","locale","navigator","language","slice","messages","onError","console","log","basename","getBaseName","window","location","pathname","variant","component","className","role","size","headingLevel","Register","lazy","Routes","Switch","Route","key","exact","path","rootClass","Suspense","fallback","Redirect","to","push"],"sourceRoot":""}