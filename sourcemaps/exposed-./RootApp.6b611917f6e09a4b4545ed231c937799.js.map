{"version":3,"file":"js/exposed-./RootApp.xxxxxxxxxxxxxxxxxxxx.js","mappings":"iKAMA,MAcA,EAdaA,KAMX,IAAAC,YAAU,MALVC,iBACEC,SAASC,OAAOC,OAChBF,SAASC,OAAOE,YAAY,eAC9B,CAGEC,GACAJ,SAASC,OAAOI,oBAAoB,GACnC,IAEI,kBAAC,IAAS,CAACC,WAAYT,I,sHCXhC,MAUA,EAViB,IACf,kBAAC,KAAY,CACXU,OAAQC,UAAUC,SAASC,MAAM,EAAG,GACpCC,SAAU,EACVC,QAASC,QAAQC,KAEjB,kBAAC,IAAG,M,mHCHR,MAUA,EAVgB,IACd,kBAAC,IAAU,KACT,kBAAC,IAAgB,CACfC,UAAU,UACVC,aAAa,KACbC,KAAM,kBAAC,IAAc,CAACA,KAAM,Q,8FCTlC,MAAMC,GAAW,IAAAC,OAAK,IACpB,0IAIWC,EAAY,IAErB,kBAAC,EAAAC,OAAM,KACL,kBAAC,EAAAC,MAAK,CACJC,IAAI,WACJC,OAAK,EACLC,KARkB,IASlBC,UAAU,WACVC,QACE,kBAAC,EAAAC,SAAQ,CAACC,SAAU,kBAAC,IAAO,OACzB,IACD,kBAACX,EAAQ,MAAI,OAInB,kBAAC,EAAAI,MAAK,CAACG,KAAK,IAAIE,QAAS,kBAAC,EAAAG,SAAQ,CAACC,GAjBf,Q","sources":["webpack:///./src/App.js","webpack:///./src/AppEntry.js","webpack:///./src/Components/Loading/Loading.js","webpack:///./src/Routes.js"],"sourcesContent":["import './App.scss';\n\nimport React, { useEffect } from 'react';\n\nimport { RouteList } from './Routes';\n\nconst App = (props) => {\n  async function initChrome() {\n    insights.chrome.init();\n    insights.chrome.identifyApp('registration');\n  }\n\n  useEffect(() => {\n    initChrome();\n    insights.chrome.hideGlobalFilter?.();\n  }, []);\n\n  return <RouteList childProps={props} />;\n};\n\nexport default App;\n","/* eslint-disable no-console */\nimport App from './App';\nimport { IntlProvider } from '@redhat-cloud-services/frontend-components-translations/index';\nimport React from 'react';\nimport messages from '../locales/data.json';\n\nconst AppEntry = () => (\n  <IntlProvider\n    locale={navigator.language.slice(0, 2)}\n    messages={messages}\n    onError={console.log}\n  >\n    <App />\n  </IntlProvider>\n);\n\nexport default AppEntry;\n","import {\n  EmptyState,\n  EmptyStateHeader,\n  EmptyStateIcon,\n  Spinner,\n} from '@patternfly/react-core/dist/esm/components';\n\nimport React from 'react';\n\nconst Loading = () => (\n  <EmptyState>\n    <EmptyStateHeader\n      titleText=\"Loading\"\n      headingLevel=\"h4\"\n      icon={<EmptyStateIcon icon={Spinner} />}\n    />\n  </EmptyState>\n);\n\nexport default Loading;\n","import React, { Suspense, lazy } from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\n\nimport Loading from './Components/Loading/Loading';\n\nconst Register = lazy(() =>\n  import(/* webpackChunkName: \"Register\" */ './Routes/Register/Register')\n);\nconst paths = { register: '/' };\n\nexport const RouteList = () => {\n  return (\n    <Routes>\n      <Route\n        key=\"register\"\n        exact\n        path={paths.register}\n        rootClass=\"Insights\"\n        element={\n          <Suspense fallback={<Loading />}>\n            {' '}\n            <Register />{' '}\n          </Suspense>\n        }\n      />\n      <Route path=\"*\" element={<Navigate to={paths.register} />} />\n    </Routes>\n  );\n};\n"],"names":["props","useEffect","async","insights","chrome","init","identifyApp","initChrome","hideGlobalFilter","childProps","locale","navigator","language","slice","messages","onError","console","log","titleText","headingLevel","icon","Register","lazy","RouteList","Routes","Route","key","exact","path","rootClass","element","Suspense","fallback","Navigate","to"],"sourceRoot":""}